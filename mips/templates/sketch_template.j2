// THIS SKETCH HAS BEEN GENERATED BY ModularInstrumentPanel
//      https://github.com/sean-delcastillo/ModularInstrumentPanel
// {{datetime}}

#include <Metro.h>
#include <Bounce.h>

{% for device in devices %}
int {{ device.name }} = {{ device.pin_number }};
{% endfor %}

Metro serialMetro = Metro(250);
Metro delayMetro = Metro(200);

void setup() {
    {% for device in devices %}
    pinMode({{ device.pin_number }}, {{ device.io | upper }});
    {% endfor %}

    Serial.begin(38400);
}

void loop() {
    {% if test == True %}
    {% for device in devices %}
    {% if device.type == "led" %}

    if (delayMetro.check() == 1) {
        digitalToggle({{device.name}});
    }

    {% elif device.type == "potentiometer" %}
    if (serialMetro.check() == 1) {
        Serial.print("[Potentionmeter] {{device.name}} on pin {{device.pin_number}} is: ");
        Serial.println(analogRead({{device.name}}));
    }

    {% elif device.type == "button" %}
    Bounce button_{{device.pin_number}} = Bounce({{device.name}}, 10)
    if (pushButton.update(button_{{device.pin_number}})) {
        if (pushButton.risingEdge()) {
            Serial.print("[Button] {{device.name}} on pin {{device.pin_number}} pressed")
        }
    }


    {% endif %}
    {% endfor %}
    {% else %}
    Serial.println("Need to write this part!");

    {% endif %}
}